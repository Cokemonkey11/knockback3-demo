package Escape
    import ClosureTimers
    import Knockback3
    import Reference

    let stuck_spots = [vec2(-826., -2767.), vec2(0., -2637.), vec2(1118., -2679.)]

    function spawn_knockback_unit(vec2 where, real power, angle groundAngle, angle trajectory)
        let u = createUnit(Player(0), 'hfoo', where, 0 .fromDeg())..addAbility('Aloc')
        doAfter(6.) ->
            u.remove()

        Knockback3.add(u, power, groundAngle, trajectory)

    interface AngleGenerator
        function generate() returns angle

    constant ang_ = new Reference(2. * PI / 5.)
    AngleGenerator angle_generator = () -> begin
        ang_.val += PI / 5.
        return ang_.val.asAngleRadians()
    end

    init
        FogEnable(false)
        FogMaskEnable(false)

        Knockback3.restitutionCoefficientGround = .8
        Knockback3.frictionFxThreshold = GetRandomReal(100., 1000.)

        print("Press escape to spawn units with knockback")

        CreateTrigger()..registerPlayerEvent(Player(0), EVENT_PLAYER_END_CINEMATIC)
                ..addAction() ->

            for i = 0 to 3
                let power = GetRandomReal(50., 2000.)
                let groundAngle = GetRandomReal(0., 2.*bj_PI)
                let airAngle = GetRandomReal(0., bj_PI)
                spawn_knockback_unit(ZERO2, power, groundAngle .asAngleRadians(), airAngle .asAngleRadians())

            for i = 0 to stuck_spots.length - 1
                spawn_knockback_unit(stuck_spots[i], 900., angle_generator.generate(), angle(PIHALF / 2.))
